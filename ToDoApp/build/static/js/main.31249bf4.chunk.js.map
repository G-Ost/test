{"version":3,"sources":["Images/bin.png","Images/add.png","components/Button.js","contexts/taskListReducerContext.js","conteners/AddTask.js","conteners/Sort.js","components/Checkbox.js","conteners/TaskRow.js","conteners/TaskList.js","contexts/AuthProviderContext.js","Images/logout.png","Images/hover.png","App.js","reportWebVitals.js","Images/lock.png","components/PublicPage.js","components/ToDo.js","components/ErrorPage.js","index.js"],"names":["Button","props","delButtonSize","window","innerHeight","addButtonSize","isRemove","alt","className","src","deleteButtonImage","style","height","width","onClick","clickFunction","addButtonImage","top","TaskListReducerContext","React","createContext","grabLocalStorage","key","defaultValue","valueInLocalStorage","localStorage","getItem","length","JSON","parse","setTnitialState","args","tasks","formTask","filterCondition","taskListReducer","state","action","type","modifiedData","externalData","map","task","title","completed","isDisplayable","id","payload","holderArray","splice","buttonIndex","checkboxIndex","filter","chosenCondition","TaskListReducerContextProvider","storageKey","elementsSizeUnit","useReducer","dispatch","Provider","value","children","AddTask","useContext","divStyle","display","position","left","fontSize","marginRight","whiteSpace","onChange","e","target","preventDefault","Sort","name","Checkbox","onClickBox","checked","isChecked","transform","TaskRow","taskIndex","index","to","TaskList","authContext","AuthProviderContext","isLogged","setIsLogged","history","useHistory","authTokens","requestAuth","email","password","a","fetch","method","headers","body","stringify","then","response","result","status","json","didWorked","includes","token","push","signIn","signOut","App","url","useState","setExternalData","useMemo","isMounted","info","fetchData","useFetch","useEffect","setItem","appHeight","background","onMouseOver","currentTarget","hoverLogoutImage","onMouseOut","logoutImage","right","pathname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","PublicPage","formInfo","setFormInfo","showError","setShowError","inputStyle","textAlign","onFocus","lock","color","submit","ToDo","useParams","taskTitle","find","ErrorPage","buttonStyle","backgroundColor","replace","ReactDOM","render","StrictMode","path","exact","document","getElementById"],"mappings":"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","file":"static/js/main.31249bf4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bin.61e22baa.png\";","export default __webpack_public_path__ + \"static/media/add.8937cc99.png\";","import deleteButtonImage from \"../Images/bin.png\";\r\nimport addButtonImage from \"../Images/add.png\";\r\n\r\nfunction Button(props) {\r\n    let delButtonSize = window.innerHeight / 35;\r\n    let addButtonSize = window.innerHeight / 14;\r\n    if (props.isRemove) {\r\n        return (\r\n            <img alt=\"removeButton\" className=\"removeButton\" src={deleteButtonImage} style={{ height: delButtonSize, width: delButtonSize }} onClick={props.clickFunction}></img>\r\n        )\r\n    } else;\r\n    return (\r\n        <img alt=\"submitButton\" className=\"submitButton\" src={addButtonImage} style={{ height: addButtonSize, width: addButtonSize, top: -addButtonSize / 8 }} onClick={props.clickFunction}></img>\r\n    )\r\n}\r\nexport default Button;","import React, { useReducer } from \"react\";\r\nconst TaskListReducerContext = React.createContext({});\r\n\r\nfunction grabLocalStorage(key, defaultValue) {\r\n    const valueInLocalStorage = localStorage.getItem(key);\r\n    if (valueInLocalStorage !== null) {\r\n        if (valueInLocalStorage.length > 0)\r\n            return JSON.parse(valueInLocalStorage)\r\n    }\r\n    return typeof defaultValue === \"function\" ? defaultValue() : defaultValue\r\n}\r\n\r\n\r\nfunction setTnitialState(args) {\r\n    const [key, listDefaultValue] = args;\r\n    return {\r\n        tasks: grabLocalStorage(key, listDefaultValue),\r\n        formTask: \"\",\r\n        filterCondition: \"All\"\r\n    }\r\n}\r\n\r\n\r\nfunction taskListReducer(state, action) {\r\n    switch (action.type) {\r\n        case \"JOIN_EXTERNAL_DATA\": {\r\n            if (state.tasks.length === 0) {\r\n                let modifiedData = action.externalData.map(task => {\r\n                    return {\r\n                        title: task.title,\r\n                        completed: task.completed,\r\n                        isDisplayable: \"inline\",\r\n                        id: \"task\" + task.id\r\n                    }\r\n                });\r\n                return { ...state, tasks: modifiedData };\r\n            }\r\n            return { ...state }\r\n        }\r\n        case \"FIELD\":\r\n            return {\r\n                ...state,\r\n                formTask: action.payload\r\n            }\r\n        case \"SUBMIT\":\r\n            {\r\n                return {\r\n                    ...state, tasks: [...state.tasks, { title: state.formTask, completed: false, isDisplayable: \"inline\", id: `Task${state.tasks.length + 1}` }], formTask: \"\"\r\n                }\r\n            }\r\n        case \"DELETE\": {\r\n            let holderArray = [...state.tasks];\r\n            holderArray.splice(action.buttonIndex, 1)\r\n            return {\r\n                ...state, tasks: [...holderArray]\r\n            }\r\n        }\r\n        case \"CHECKBOX\": {\r\n            let holderArray = [...state.tasks];\r\n            holderArray[action.checkboxIndex].completed = !action.payload;\r\n            return {\r\n                ...state, tasks: [...holderArray]\r\n            }\r\n        }\r\n        case \"FILTER\": {\r\n            let chosenCondition = action.payload;\r\n            let filter;\r\n            if (chosenCondition === \"All\") {\r\n                filter = \"All\"\r\n            }\r\n            else if (chosenCondition === \"Done\") {\r\n                filter = true\r\n            }\r\n            else {\r\n                filter = false\r\n            }\r\n            return {\r\n                ...state, filterCondition: filter\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\nconst TaskListReducerContextProvider = (props) => {\r\n    let storageKey = \"toDoTaskList\";\r\n    let elementsSizeUnit = window.innerHeight / 2;\r\n    const [state, dispatch] = useReducer(taskListReducer, [storageKey, []], setTnitialState)\r\n\r\n    return (\r\n        <TaskListReducerContext.Provider value={{ state, dispatch, storageKey, elementsSizeUnit }}>\r\n            {props.children}\r\n        </TaskListReducerContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TaskListReducerContextProvider, TaskListReducerContext }","import { useContext } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\nfunction AddTask(props) {\r\n    let { state, dispatch, storageKey, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        dispatch({ type: \"SUBMIT\", key: storageKey })\r\n    }\r\n\r\n    function handleChange(e) {\r\n        dispatch({ type: \"FIELD\", payload: e.target.value })\r\n    }\r\n\r\n    let divStyle = { display: \"flex\", position: \"relative\", left: elementsSizeUnit / 6, fontSize: elementsSizeUnit / 12.5, top: elementsSizeUnit / 10, height: \"100%\", width: \"auto\", marginRight: elementsSizeUnit / 2 };\r\n    return (\r\n        <div style={divStyle}>\r\n            <label id=\"inputLabel\" style={{ whiteSpace: \"no-wrap\" }} />\r\n                Add new task: &nbsp;\r\n            <input id=\"taskInput\" style={{ fontSize: elementsSizeUnit / 18, width: elementsSizeUnit * 0.5, height: elementsSizeUnit / 11 }} type=\"text\" value={state.formTask} onChange={handleChange} />\r\n            <Button clickFunction={handleSubmit} isRemove={false} title=\"+\" ></Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTask;","import { useContext } from \"react\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\n\r\n\r\nfunction Sort(props) {\r\n    let { dispatch, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n    function selectHandler(e) {\r\n        dispatch({ type: \"FILTER\", payload: e.target.value })\r\n    }\r\n    let divStyle = { display: \"flex\", position: \"relative\", top: elementsSizeUnit / 10, left: elementsSizeUnit / 6, fontSize: elementsSizeUnit / 12.5, height: \"100%\", width: \"auto\", marginRight: elementsSizeUnit / 2, whiteSpace: \"no-wrap\" };\r\n    return (\r\n        <div style={divStyle}>\r\n            <label id=\"containerLabel\" />Sort by:&nbsp;\r\n            <select id=\"optionContainer\" name=\"condition\" onChange={selectHandler} style={{ fontSize: elementsSizeUnit / 18, width: elementsSizeUnit * 0.5, height: elementsSizeUnit / 9 }}>\r\n                <option defaultValue=\"All\" value=\"All\"> All </option>\r\n                <option value=\"Done\"> Done</option>\r\n                <option value=\"Undone\"> Undone</option>\r\n            </select>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sort;","import { useContext } from \"react\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\n\r\nfunction Checkbox(props) {\r\n    let { elementsSizeUnit } = useContext(TaskListReducerContext);\r\n    return <input onChange={props.onClickBox} type=\"checkbox\" checked={props.isChecked} style={{ transform: `scale(${elementsSizeUnit / 330})` }}></input>\r\n}\r\n\r\nexport default Checkbox;","import { useContext } from \"react\";\r\nimport Button from \"../components/Button\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\nimport Checkbox from \"../components/Checkbox\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction TaskRow(props) {\r\n    let { state, dispatch, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n\r\n\r\n    function delButtonHandler(buttonIndex) {\r\n        dispatch({ type: \"DELETE\", buttonIndex: buttonIndex })\r\n    }\r\n\r\n    function checkboxHandler(index) {\r\n        dispatch({ type: \"CHECKBOX\", checkboxIndex: index, payload: state.tasks[index].completed })\r\n    }\r\n\r\n    let taskIndex = (props.index + 1 + \". \");\r\n\r\n    return (\r\n        <p className={\"task\"} id={\"task\" + props.index} >\r\n            <Checkbox onClickBox={() => checkboxHandler(props.index)} isChecked={state.tasks[props.index].completed}></Checkbox>\r\n      &nbsp;\r\n            <Link to={`/todos/${props.task.id}`}><span style={{ fontSize: elementsSizeUnit / 18 }}>\r\n                <b>{taskIndex}</b>{props.task.title}\r\n            </span></Link>\r\n  &nbsp;\r\n            <Button clickFunction={() => delButtonHandler(props.index)} isRemove={true} title=\"X\"></Button>\r\n        </p>)\r\n}\r\n\r\nexport default TaskRow;","import TaskRow from \"./TaskRow\"\r\nimport { useContext } from \"react\";\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\"\r\nfunction TaskList() {\r\n    let { state, elementsSizeUnit } = useContext(TaskListReducerContext);\r\n    let tasks = state.tasks\r\n    let filterCondition = state.filterCondition\r\n    return (\r\n        <>\r\n            <div className=\"tasks\" style={{ left: elementsSizeUnit / 10, width: elementsSizeUnit * 3 }}>\r\n                {tasks.map((task, index) => {\r\n                    if (filterCondition === \"All\" || task.completed === filterCondition) {\r\n                        return (\r\n                            <TaskRow key={index} task={task} index={index} ></TaskRow>\r\n                        )\r\n                    }\r\n                    else return false;\r\n                })}\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default TaskList;","import * as React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst authContext = React.createContext();\r\n\r\nfunction AuthProviderContext(props) {\r\n    const [isLogged, setIsLogged] = React.useState(false);\r\n    let history = useHistory();\r\n\r\n    const authTokens = [\"QpwL5tke4Pnpja7X4\"];\r\n\r\n\r\n\r\n    async function requestAuth(email, password) {\r\n        let result;\r\n        await fetch(`https://reqres.in/api/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(\r\n                {\r\n                    \"email\": email,\r\n                    \"password\": password\r\n                }\r\n            )\r\n        })\r\n            .then((response) => {\r\n                if (response.status !== 200) {\r\n                    result = false;\r\n                }\r\n                else {\r\n                    result = response.json()\r\n                }\r\n\r\n            })\r\n        return result;\r\n    }\r\n\r\n\r\n    async function signIn(email, password) {\r\n        let didWorked = false;\r\n        await requestAuth(email, password).then((result) => {\r\n            if (result) {\r\n                if (authTokens.includes(result.token)) {\r\n                    didWorked = true;\r\n                    setIsLogged(true);\r\n                    history.push(\"/todo\");\r\n                }\r\n\r\n            }\r\n        })\r\n        return didWorked;\r\n    }\r\n\r\n\r\n    const signOut = () => setIsLogged(false);\r\n\r\n    const value = { isLogged, signIn, signOut }\r\n    return <authContext.Provider value={value}>{props.children}</authContext.Provider>\r\n}\r\n\r\nexport { AuthProviderContext, authContext }","export default __webpack_public_path__ + \"static/media/logout.bdc81afd.png\";","export default __webpack_public_path__ + \"static/media/hover.398217ee.png\";","import React, { useState, useEffect, useContext, useMemo } from \"react\";\nimport './App.css';\nimport AddTask from \"./conteners/AddTask\";\nimport Sort from \"./conteners/Sort\";\nimport TaskList from \"./conteners/TaskList\";\nimport { TaskListReducerContext } from \"./contexts/taskListReducerContext\";\nimport { authContext } from \"./contexts/AuthProviderContext\";\nimport { Redirect } from \"react-router-dom\";\nimport logoutImage from \"./Images/logout.png\";\nimport hoverLogoutImage from \"./Images/hover.png\";\n\nfunction useFetch(url) {\n  const [externalData, setExternalData] = useState([]);\n\n  useMemo(\n    () => {\n      let isMounted = true;\n\n      async function fetchData() {\n        let info = await fetch(url);\n        let response = await info.json();\n        setExternalData(response);\n      };\n      if (isMounted) {\n        fetchData();\n      }\n      return () => { isMounted = false }\n    }, [url]\n  )\n  return externalData;\n}\n\n\n\nfunction App(props) {\n  let { state, dispatch, storageKey, elementsSizeUnit } = useContext(TaskListReducerContext);\n  const { isLogged, signOut } = useContext(authContext);\n\n  let externalData = useFetch(\"https://jsonplaceholder.typicode.com/users/1/todos\");\n\n  useEffect(() => {\n    localStorage.setItem(storageKey, JSON.stringify([...state.tasks]));\n  }, [state.tasks, storageKey]);\n\n  useEffect(() => {\n    dispatch({ type: \"JOIN_EXTERNAL_DATA\", externalData: externalData })\n  }, [externalData, dispatch])\n  let appHeight = (elementsSizeUnit / 3);\n\n\n  if (!isLogged) {\n    return (<Redirect to={{ pathname: \"/login\" }} />)\n  }\n\n  return (\n    <div className=\"appContainer\" style={{ position: \"absolute\", width: \"100%\", height: appHeight }}>\n      <span style={{ position: \"relative\", display: \"inline-flex\", height: appHeight, width: \"100%\", background: \"rgb(50,200,255)\" }}>\n        <AddTask />\n        <Sort />\n        <img alt=\"logoutButton\" onMouseOver={e => (e.currentTarget.src = hoverLogoutImage)} onMouseOut={e => (e.currentTarget.src = logoutImage)} style={{ height: appHeight / 3, top: appHeight / 3.5, right: elementsSizeUnit / 10, position: \"absolute\" }} src={logoutImage} onClick={() => { signOut() }}></img>\n      </span>\n      <TaskList />\n    </div>\n  )\n}\n\nexport default App;\n\n\n\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/lock.d009ed91.png\";","import { useContext } from \"react\";\r\nimport { authContext } from \"../contexts/AuthProviderContext\";\r\nimport lock from \"../Images/lock.png\";\r\nimport React, { useState } from \"react\";\r\nfunction PublicPage(props) {\r\n    const { signIn } = useContext(authContext);\r\n    const [formInfo, setFormInfo] = useState({ email: \"email\", password: \"password\" })\r\n    const [showError, setShowError] = useState(false)\r\n    let inputStyle = { fontSize: window.innerHeight / 40 };\r\n\r\n    async function submit() {\r\n        await signIn(formInfo.email, formInfo.password).then(\r\n            (result) => {\r\n                if (!result) {\r\n                    setShowError(true)\r\n                }\r\n            }\r\n        )\r\n        // if (!signIn(formInfo.email, formInfo.password)) {\r\n        //     console.log(\"x\")\r\n        //     setShowError(true)\r\n        // }\r\n\r\n    }\r\n\r\n    return (\r\n        <div style={{ textAlign: \"center\" }}>\r\n            <h1 style={{ fontSize: window.innerHeight / 20 }}>User login</h1>\r\n            <input style={inputStyle} onFocus={() => { setFormInfo({ ...formInfo, email: \"\" }); setShowError(false) }} value={formInfo.email} onChange={(e) => { setFormInfo({ ...formInfo, email: e.target.value }) }}></input>\r\n            <img alt=\"lockIcon\" style={{ position: \"absolute\", display: \"inline-block\", top: window.innerHeight / 9, height: window.innerHeight / 11 }} src={lock}></img>\r\n            <br />\r\n            <input style={inputStyle} value={formInfo.password} onFocus={() => { setFormInfo({ ...formInfo, password: \"\" }); setShowError(false) }} onChange={(e) => { setFormInfo({ ...formInfo, password: e.target.value }) }}></input>\r\n            {showError && <h2 style={{ fontSize: window.innerHeight / 50, color: \"red\" }}>Wrong email or password.</h2>}\r\n            {!showError && <h2 style={{ fontSize: window.innerHeight / 50 }}>&nbsp;</h2>}\r\n            <button style={{ fontSize: window.innerHeight / 35, background: \"grey\", color: \"white\" }} onClick={() => { submit() }}>Submit</button>\r\n            <br />\r\n            <h2 id=\"hintMessage\" onClick={() => { setFormInfo({ email: \"eve.holt@reqres.in\", password: \"whatever\" }) }} style={{ fontSize: window.innerHeight / 45 }}>Hint: auth server will accept email: \"eve.holt@reqres.in\" and any non-empty string as password (or just click here).</h2>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default PublicPage;","import * as React from 'react';\r\nimport { useParams } from \"react-router-dom\"\r\nimport { TaskListReducerContext } from \"../contexts/taskListReducerContext\";\r\n\r\n\r\nfunction ToDo(props) {\r\n    let { state } = React.useContext(TaskListReducerContext);\r\n    const { id } = useParams();\r\n    const taskTitle = state.tasks.find((task) => task.id === id);\r\n    return (\r\n        <div>\r\n            <h2>{taskTitle ? taskTitle.title : \"Task was deleted.\"}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDo;","import { useHistory } from \"react-router-dom\";\r\n\r\nfunction ErrorPage() {\r\n    const history = useHistory();\r\n\r\n    function redirectToLoginpage() {\r\n        let path = `/login`;\r\n        history.replace(path);\r\n    }\r\n\r\n    let buttonStyle = { backgroundColor: \"#4CAF50\", color: \"white\", fontSize: window.innerHeight / 20 };\r\n    return (<>\r\n        <h1>It looks like you're lost, m8.</h1>\r\n        <button style={buttonStyle} onClick={redirectToLoginpage}>Take me back.</button>\r\n    </>)\r\n}\r\n\r\nexport default ErrorPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import AppTest from './AppTest';\nimport reportWebVitals from './reportWebVitals';\nimport { TaskListReducerContextProvider } from \"./contexts/taskListReducerContext\"\nimport { AuthProviderContext } from \"./contexts/AuthProviderContext\"\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport PublicPage from \"./components/PublicPage\";\nimport ToDo from \"./components/ToDo\"\nimport ErrorPage from \"./components/ErrorPage\"\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter >\n      <AuthProviderContext>\n        <TaskListReducerContextProvider>\n          <Switch>\n            <Route path=\"/todo\">\n              <App />\n            </Route>\n            <Route path=\"/todos/:id\">\n              <ToDo></ToDo>\n            </Route>\n            <Route exact path={[\"/login\", \"/\"]}>\n              <PublicPage />\n            </Route>\n            <Route path=\"/*\">\n              <ErrorPage />\n            </Route>\n          </Switch>\n        </TaskListReducerContextProvider>\n      </AuthProviderContext>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}